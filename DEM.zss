#[function player(f)]
#if ID =! player($f),ID {}

[Statedef -4]
ignorehitpause {
	
	# basic movement
	if command = "/x" {let dis = 6;}
	else {let dis = 3;}

	if command = "holdfwd" {posadd{x:$dis;}}
	if command = "holdback"{posadd{x:-$dis;}}
	if command = "holdup" && pos y > topedge {posadd{y:-$dis;}}
	if command = "holddown" && pos y < bottomedge {posadd{y:$dis;}}

	# lifebars toggle
	if command = "y" {map(dem_lifebars):=cond(!map(dem_lifebars),1,0);}
	if map(dem_lifebars) {assertspecial{flag:nobardisplay}}

	# zoom toggle
	if command = "z" {
		if map(dem_zoom) < 0.5 {map(dem_zoom):= map(dem_zoom)+0.25;}
		else if map(dem_zoom) = 0.5 {map(dem_zoom):= 2;}
		else {map(dem_zoom):= 0;}
	}
	if map(dem_zoom) {zoom{scale:1+map(dem_zoom); pos: pos x/camerazoom, pos y/camerazoom; lag:0.8; stagebound:1;}}
	
	# free movement/p2 camera toggle
	if stateno = 5900 {map(dem_cam):= playerno;}
	let f = map(dem_cam);
	if command = "a" {
		if $f < 9 && playeridexist(player($f+1),ID) {map(dem_cam):= $f+1;}
		else if $f < 9 && playeridexist(player($f+2),ID) {map(dem_cam):= $f+2;}
		else {map(dem_cam):= 1;}
		}
	if player($f),ID != ID {posset{x:player($f),pos x; y:player($f),pos y;}}

	# freeze p2
	if command = "b" {
	map(dem_frz):=cond(!map(dem_frz),1,0);
	}

	# hide p2
	if command = "c" {
	map(dem_frz):=0;
	map(dem_inv):=cond(!map(dem_inv),1,0);
	}
	
	# hud toggle
	if command = "start" {
	map(dem_lifebars):=cond(!numexplod(1000),1,0);
	map(dem_hud):=cond(!numexplod(1000),1,0);
	}
		
	if map(dem_hud) {
	# crosshairs
		explod{id:1000; anim:1000; space:screen; scale: 0.5,0.5; ontop:1; pos:0,0;}
		explod{id:1000; anim:1000; space:screen; scale: 0.5,0.5; ontop:1; pos:0,screenheight; vfacing:-1;}
		explod{id:1000; anim:1000; space:screen; scale: 0.5,0.5; ontop:1; pos:screenwidth,0; facing:-1;}
		explod{id:1000; anim:1000; space:screen; scale: 0.5,0.5; ontop:1; pos:screenwidth,screenheight; vfacing:-1; facing:-1;}
	
	# small crosshairs
		explod{id:1000; anim:1000; space:screen; scale: 0.25,0.25; ontop:1; pos:screenwidth/2-25,screenheight/2-25;}
		explod{id:1000; anim:1000; space:screen; scale: 0.25,0.25; ontop:1; pos:screenwidth/2-25,screenheight/2+25; vfacing:-1;}
		explod{id:1000; anim:1000; space:screen; scale: 0.25,0.25; ontop:1; pos:screenwidth/2+25,screenheight/2-25; facing:-1;}
		explod{id:1000; anim:1000; space:screen; scale: 0.25,0.25; ontop:1; pos:screenwidth/2+25,screenheight/2+25; vfacing:-1; facing:-1;}
	
	# REC
		explod{id:1000; anim:1001; space:screen; scale: 0.5,0.5; ontop:1; pos:0,0;}
	
	# red circle
		explod{id:1000; anim:1002; space:screen; scale: 0.5,0.5; ontop:1; pos:0,0; removetime:-1;}
	}
	else {removeexplod{id:1000;}}

	# mom
	if abs(leftedge) > 140 && abs(rightedge) > 140 {camera{view:follow; followid:id}}
	ctrlset{value:1;}
	assertspecial{flag:nohardcodedkeys; flag2:noautoturn; flag3:timerfreeze;}
	assertspecial{flag:nointroreset; flag2:roundnotskip;}
	playerpush{value:0}
	nothitby{value:SCA}

	# p2
	# assertspecial{flag:noautoturn; redirectid:p2,id} # can cause issues with custom input buffers
	
	if map(dem_frz) || map(dem_inv) {
	pause{time:1; movetime:1; pausebg:cond(map(dem_frz),1,0);}
	if map(dem_inv) {for i = 1; 8; 1 {assertspecial{flag:invisible; redirectid:player($i),id}}}
	}

}